{"version":3,"sources":["reportWebVitals.js","components/scroll.jsx","components/Card.jsx","components/CardList.jsx","components/Searchbox.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Scroll","props","style","overflowY","height","children","Card","className","src","id","alt","name","email","Cards","Robot","cardarr","map","us","i","SearchBox","Onsearch","onChange","type","placeholder","App","event","setState","SearchValue","target","value","state","robot","fetch","response","json","users","searched","this","filter","robots","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCGCQ,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,SAA3C,SACKH,EAAMI,YCOJC,MAVf,SAAcL,GACV,OACI,sBAAKM,UAAU,mDAAf,UACI,qBAAKC,IAAK,wBAA0BP,EAAMQ,GAAK,WAAYC,IAAI,SAC/D,6BAAKT,EAAMU,OACX,4BAAIV,EAAMW,YCOPC,EAXD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACNC,EAAUD,EAAME,KAAK,SAACC,EAAKC,GAC9B,OAAQ,cAAC,EAAD,CAAcT,GAAIK,EAAMI,GAAGT,GAAIE,KAAMG,EAAMI,GAAGP,KAAMC,MAAOE,EAAMI,GAAGN,OAAzDM,MAEtB,OACI,8BACCH,KCAMI,EAPG,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEhB,OACI,uBAAOC,SAAUD,EAAYb,UAAU,MAAMe,KAAK,SAASC,YAAY,kBCiChEC,E,kDA9Bb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IAMRmB,SAAW,SAACK,GACV,EAAKC,SAAS,CAACC,YAAcF,EAAMG,OAAOC,SAN1C,EAAKC,MAAQ,CACXC,MAAO,GACPJ,YAAa,IAJE,E,gEAUC,IAAD,OACjBK,MAAM,8CAA8CtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAAQxC,MAAK,SAAAyC,GAAK,OAAI,EAAKT,SAAS,CAACK,MAAOI,S,+BAElH,IAAD,OACDC,EAAWC,KAAKP,MAAMC,MAAMO,QAAO,SAAAC,GACzC,OAAOA,EAAO5B,KAAK6B,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAGjE,OACE,sBAAKjC,UAAU,KAAf,UACA,6CACA,cAAC,EAAD,CAAWa,SAAUiB,KAAKjB,WAC1B,cAAC,EAAD,UACA,cAAC,EAAD,CAAON,MAAOsB,a,GAxBFM,a,MCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.6dd9ea4b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return ( \r\n        <div style={{ overflowY: 'scroll', height: '500px' }}>\r\n            {props.children}\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={\"https://robohash.org/\" + props.id + \"?200x200\"} alt=\"Robo\" />\r\n            <h1>{props.name}</h1>\r\n            <p>{props.email}</p>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cards = ({Robot}) => {\r\n    const cardarr = Robot.map( (us , i) => {\r\n       return (<Card key={i} id={Robot[i].id} name={Robot[i].name} email={Robot[i].email} />)\r\n       })\r\n    return ( \r\n        <div>\r\n        {cardarr}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Cards;","import React from 'react';\r\n\r\nconst SearchBox = ({Onsearch}) => {\r\n\r\n    return ( \r\n        <input onChange={Onsearch}   className='pa3' type='search' placeholder='Search Robot' />\r\n     );\r\n}\r\n \r\nexport default SearchBox;","import React, { Component } from 'react';\nimport Scroll from './components/scroll'\nimport Cards from './components/CardList';\nimport SearchBox from './components/Searchbox'\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      robot: [],\n      SearchValue: ''\n     }\n  }\n  Onsearch = (event) =>{\n    this.setState({SearchValue : event.target.value })\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({robot: users}))\n  }\n  render() { \n    const searched = this.state.robot.filter(robots =>{\n    return robots.name.toLowerCase().includes(this.state.SearchValue.toLowerCase())\n    }\n    )\n    return ( \n      <div className='tc'>\n      <h1>Robo Friend</h1>\n      <SearchBox Onsearch={this.Onsearch} />\n      <Scroll>\n      <Cards Robot={searched} />\n      </Scroll>\n      </div>\n     );\n  }\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App'\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}